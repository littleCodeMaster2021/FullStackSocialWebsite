{
  "swagger": "2.0",
  "info": {
    "description": "This is a API documentation for cis557-project-photo-sharing-social-network-app-codemasters team project",
    "version": "1.0.0",
    "title": "Swagger photo-sharing-social-network-app-codemasters",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "yuhangu@seas.upenn.edu"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:3000",
  "tags": [
    {
      "name": "Profile",
      "description": "Post of the user",
      "externalDocs": {
        "description": "Display the profile of specific user",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/profile/{userid}/post": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "READ text and photos of the post",
        "description": "This endpoints use a get request to update user post image to backend",
        "operationId": "addPicture",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "description": "READ text and photos of the post",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "operation success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Update text of the post",
        "description": "Update text of the post",
        "operationId": "updatePet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "description": "This endpoints use a get request to update user post image to backend",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Post": {
      "type": "object",
      "properties": {
        "userid": {
          "type": "string",
          "format": "string"
        },
        "postid": {
          "type": "number",
          "format": "int64"
        },
        "text": {
          "type": "string",
          "format": "string"
        },
        "image": {
          "type": "string",
          "format": "string"
        },
        "likes": {
          "type": "integer",
          "format": "int64"
        },
        "likedBy": {
          "type": "array",
          "xml": {
            "name": "userid",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "dislikes": {
          "type": "integer",
          "format": "int64"
        },
        "dislikedBy": {
          "type": "array",
          "xml": {
            "name": "userid",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "comment": {
          "type": "array",
          "xml": {
            "name": "comment",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "commentator": {
          "type": "array",
          "xml": {
            "name": "userid",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}